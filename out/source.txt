"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clientJS = void 0;
exports.clientJS = () => {
    const injectStyles = () => {
        const style = document.createElement("style");
        style.setAttribute("type", "text/css");
        style.appendChild(document.createTextNode(`${css}`));
        document.head.appendChild(style);
        const meta = document.createElement("meta");
        meta.setAttribute("name", "viewport");
        meta.setAttribute("content", "width=device-width, initial-scale=1, minimum-scale=1");
        document.head.appendChild(meta);
    };
    injectStyles();
    const loginpage = () => {
        if (document.querySelector("#stev_role_icons.anonym") && window.location.pathname.startsWith("/studium/index.php")) {
            document.body.classList.add("body-with-login");
            document.querySelector("#flogin input[type=submit]").addEventListener("click", () => {
                ReactNativeWebView.postMessage("Hello!");
            });
        }
    };
    loginpage();
    const homepage = () => {
        const isHomepage = Array
            .from(document.querySelectorAll("body > table table.menu tr.menu1 td a.menu"))
            .some(e => { var _a; return (_a = e.textContent) === null || _a === void 0 ? void 0 : _a.includes("Textový režim"); });
        if (isHomepage) {
            document.body.classList.add("body-with-homepage");
        }
    };
    homepage();
    const timetable = () => {
        const tt = document.querySelector("#roztab");
        if (tt) {
            Array
                .from(document.querySelectorAll("#roztab .inner > span.nowrap i,#roztab .inner > span.nowrap b"))
                .forEach(e => {
                var _a, _b, _c, _d, _e;
                e.textContent = e.textContent.split(/\s/).join("\n");
                const last = (_a = e.parentNode) === null || _a === void 0 ? void 0 : _a.childNodes[((_b = e.parentNode) === null || _b === void 0 ? void 0 : _b.childNodes.length) - 1];
                if ((last === null || last === void 0 ? void 0 : last.nodeType) === 3) {
                    (_c = e.parentNode) === null || _c === void 0 ? void 0 : _c.removeChild((_d = e.parentNode) === null || _d === void 0 ? void 0 : _d.childNodes[((_e = e.parentNode) === null || _e === void 0 ? void 0 : _e.childNodes.length) - 1]);
                }
            });
            const a = () => {
                const head = Array.from(document.querySelectorAll("#roztab #head td"));
                const rect = tt === null || tt === void 0 ? void 0 : tt.getBoundingClientRect();
                head.map(h => {
                    if (rect.top < 140) {
                        h.style.top = Math.abs(rect.top - 140) - 2 + "px";
                    }
                    else {
                        h.style.top = "0";
                    }
                });
            };
            window.addEventListener("scroll", () => {
                a();
                setTimeout(a, 1);
                setTimeout(a, 3);
                setTimeout(a, 5);
                setTimeout(a, 8);
            });
        }
    };
    timetable();
};
